# -*- coding: utf-8 -*-
"""Coding Assignment-4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g2VOwb3xkxDf14bnlvW_XQ2GlOQG5liW

# **Remove Duplicates from Sorted Array**
"""

def removeDuplicates(A):
    if len(A) == 0:
        return 0

    write_index = 1

    for i in range(1, len(A)):
        if A[i] != A[i - 1]:
            A[write_index] = A[i]
            write_index += 1

    return write_index

# Test cases
A1 = []
k=int(input('enter the length: '))
for i in range(k):
  a=int(input("number: "))
  A1.append(a)

print(removeDuplicates(A1))

"""# **Single Number**"""

def findSingle(A):
    result = 0
    for num in A:
        result ^= num
    return result

# Test cases
A1 = []
k=int(input('enter the length: '))
for i in range(k):
  a=int(input("number: "))
  A1.append(a)

print(findSingle(A1))

"""# **Number of 1 Bits**"""

def countSetBits(A):
    count = 0
    while A > 0:
        count += A & 1
        A >>= 1
    return count

# Test case
A = int(input('enter number: '))
print(countSetBits(A))

"""# **Remove Duplicates from Sorted Array II**"""

def removeDuplicates(A):
    if len(A) <= 2:
        return len(A)

    index = 2
    for i in range(2, len(A)):
        if A[i] != A[index - 2]:
            A[index] = A[i]
            index += 1

    return index

# Test case
A = []
k=int(input('enter the length: '))
for i in range(k):
  a=int(input("number: "))
  A.append(a)

length = removeDuplicates(A)
print("Length:", length)
print("Array:", A[:length])

"""# **Reverse Bits**"""

def reverseBits(A):
    result = 0
    for _ in range(32):
        result <<= 1
        result |= A & 1
        A >>= 1
    return result

# Test cases
A1 = 0
A2 = 3

print(reverseBits(A1))
print(reverseBits(A2))

