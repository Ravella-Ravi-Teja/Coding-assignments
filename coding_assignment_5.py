# -*- coding: utf-8 -*-
"""Coding Assignment-5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gsW1PzvJOgSpd4zZWtRsREaW68ab06YK

# **Longest Common Prefix**
"""

def longestCommonPrefix(A):
    if not A:
        return ""

    prefix = A[0]
    for string in A[1:]:
        i = 0
        while i < len(prefix) and i < len(string) and prefix[i] == string[i]:
            i += 1
        prefix = prefix[:i]

    return prefix

# Test cases
A1 = ["abcdefgh", "aefghijk", "abcefgh"]
A2 = ["abab", "ab", "abcd"]

print(longestCommonPrefix(A1))
print(longestCommonPrefix(A2))

"""# **Reverse the String**"""

def reverseWords(A):
    # Split the input string into words
    words = A.split()

    # Reverse the order of words
    reversed_words = words[::-1]

    # Join the reversed words into a single string
    reversed_string = ' '.join(reversed_words)

    return reversed_string

# Test cases
A = input("Enter the string: ")

print(reverseWords(A))

"""# **Length of Last Word**"""

def lengthOfLastWord(s):
    length = 0
    end_of_last_word = len(s) - 1

    while end_of_last_word >= 0 and s[end_of_last_word] == ' ':
        end_of_last_word -= 1

    while end_of_last_word >= 0 and s[end_of_last_word] != ' ':
        length += 1
        end_of_last_word -= 1

    return length

# Test case
s = input("Enter the string: ")
print(lengthOfLastWord(s))

"""# **Roman To Integer**"""

def romanToInt(A):
    roman_map = {
        'I': 1, 'V': 5, 'X': 10, 'L': 50,
        'C': 100, 'D': 500, 'M': 1000
    }

    result = 0
    prev_value = 0

    for char in reversed(A):
        value = roman_map[char]

        if value < prev_value:
            result -= value
        else:
            result += value

        prev_value = value

    return result

# Test cases
A = input("ENter roman  value: ")
print(romanToInt(A))

"""# **Add Binary Strings**"""

def addBinary(a, b):
    result = []
    carry = 0

    i, j = len(a) - 1, len(b) - 1

    while i >= 0 or j >= 0:
        digit_a = int(a[i]) if i >= 0 else 0
        digit_b = int(b[j]) if j >= 0 else 0

        total = digit_a + digit_b + carry

        result.append(str(total % 2))
        carry = total // 2

        i -= 1
        j -= 1

    if carry:
        result.append(str(carry))

    return ''.join(result[::-1])

# Test cases
a = input("Enter first binary number: ")
b = input("Enter 2nd binary number: ")

print(addBinary(a, b))

